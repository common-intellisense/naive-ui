{
  "name": "NDataTable",
  "props": {
    "allow-checking-not-loaded": {
      "value": "",
      "description": "Whether to allow cascade checks for nodes that are not yet fully loaded. If you're going to use this attribute, keep in mind that 'checked-row-keys' may be incomplete",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否允许级联勾选还没有完全加载的节点。如果你要用这个属性，请记住 `checked-row-keys` 可能是不完整的"
    },
    "bordered": {
      "value": "",
      "description": "Whether or not to display the border",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否显示 border"
    },
    "bottom-bordered": {
      "value": "",
      "description": "Whether or not to display the bottom border",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否显示 bottom border"
    },
    ":checked-row-keys": {
      "value": "",
      "description": "The key of the selected column",
      "default": "undefined",
      "type": "Array<string | number>",
      "description_zh": "被选中的列的 key"
    },
    "cascade": {
      "value": "",
      "description": "Whether or not to cascade when selecting tree data",
      "default": "true",
      "type": "boolean",
      "description_zh": "在进行树型数据选择的时候是否级联"
    },
    "children-key": {
      "value": "",
      "description": "The key of the descendant node in the tree data",
      "default": "children",
      "type": "string",
      "description_zh": "树形数据下后代节点在数据中的 key"
    },
    ":columns": {
      "value": "",
      "description": "Columns that need to be displayed",
      "default": "[]",
      "type": "Array<DataTableColumn>",
      "description_zh": "需要展示的列",
      "required": true
    },
    ":data": {
      "value": "",
      "description": "Data to be presented",
      "default": "[]",
      "type": "Array<object>",
      "description_zh": "需要展示的数据",
      "required": true
    },
    ":default-checked-row-keys": {
      "value": "",
      "description": "The default key value is selected",
      "default": "[]",
      "type": "Array<string | number>",
      "description_zh": "默认选中的 key 值"
    },
    ":default-expanded-row-keys": {
      "value": "",
      "description": "The key value of the default expanded row",
      "default": "[]",
      "type": "Array<string | number>",
      "description_zh": "默认展开行的 key 值"
    },
    "default-expand-all": {
      "value": "",
      "description": "Whether to expand all expandable rows by default, and cannot be used when expanding rows asynchronously",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否默认展开全部可展开的行，不可在异步展开行时使用"
    },
    ":expanded-row-keys": {
      "value": "",
      "description": "Expand the key value of the row",
      "default": "undefined",
      "type": "Array<string | number>",
      "description_zh": "展开行的 key 值"
    },
    ":indent": {
      "value": "",
      "description": "Indentation of row content when using tree data",
      "default": "16",
      "type": "number",
      "description_zh": "使用树形数据时行内容的缩进"
    },
    "pagination-behavior-on-filter": {
      "value": [
        "first",
        "current"
      ],
      "description": "After filtering the status of the page, first is to return to the home page, and current is to stay on the current page",
      "default": "current",
      "type": "first / current",
      "description_zh": "过滤操作后页面的状态，first 为回到首页，current 为停留在当前页"
    },
    "flex-height": {
      "value": "",
      "description": "Whether or not to have the height of the table body automatically adapt to the height of the entire table area, turning on this option will make 'table-layout' always fixed",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否让表格主体的高度自动适应整个表格区域的高度，打开这个选项会让 `table-layout` 始终为 fixed"
    },
    "loading": {
      "value": "",
      "description": "Whether the loading status is displayed",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否显示 loading 状态"
    },
    "max-height": {
      "value": "",
      "description": "The maximum height of the table contents, which can be a CSS property value",
      "default": "undefined",
      "type": "number | string",
      "description_zh": "表格内容的最大高度，可以是 CSS 属性值"
    },
    "min-height": {
      "value": "",
      "description": "The minimum height of the table content, which can be a CSS property value",
      "default": "undefined",
      "type": "number | string",
      "description_zh": "表格内容的最低高度，可以是 CSS 属性值"
    },
    "paginate-single-page": {
      "value": "",
      "description": "If there is only one page of table data, whether to display pagination",
      "default": "true",
      "type": "boolean",
      "description_zh": "当表格数据只有一页时是否显示分页面"
    },
    ":pagination": {
      "value": "",
      "description": "Attribute reference [Pagination props](pagination#Pagination-Props)",
      "default": "false",
      "type": "false | object",
      "description_zh": "属性参考 [Pagination props](pagination#Pagination-Props)",
      "required": true
    },
    "remote": {
      "value": "",
      "description": "Whether or not the table is automatically paginated, you may need to set it to true in the case of asynchronousness",
      "default": "false",
      "type": "boolean",
      "description_zh": "表格是否自动分页数据，在异步的状况下你可能需要把它设为 true"
    },
    "render-cell": {
      "value": "",
      "description": "Custom cell rendering, with a lower priority than the render of the column",
      "default": "undefined",
      "type": "(value: any, rowData: object, column: DataTableBaseColumn) => VNodeChild",
      "description_zh": "自定义单元格渲染，优先级低于列的 render"
    },
    ":render-expand-icon": {
      "value": "",
      "description": "Customize the render expansion icon",
      "default": "undefined",
      "type": "({ expanded }: { expanded: boolean }) => VNodeChild",
      "description_zh": "自定义渲染展开图标"
    },
    "row-class-name": {
      "value": "",
      "description": "The class name on each line",
      "default": "undefined",
      "type": "string | (rowData: object, index : number) => string",
      "description_zh": "每一行上的类名"
    },
    "row-key": {
      "value": "",
      "description": "Create a row's key from the row data (if you don't want to add a key to each row)",
      "default": "undefined",
      "type": "(rowData: object) => (number | string)",
      "description_zh": "通过行数据创建行的 key（如果你不想给每一行加上 key）"
    },
    ":row-props": {
      "value": "",
      "description": "Custom row attributes",
      "default": "undefined",
      "type": "(rowData: object, rowIndex : number) => object",
      "description_zh": "自定义行属性"
    },
    "scroll-x": {
      "value": "",
      "description": "The horizontal width of the table contents, if the columns are fixed horizontally, you need to set it",
      "default": "undefined",
      "type": "number | string",
      "description_zh": "表格内容的横向宽度，如果列被水平固定了，则需要设定它"
    },
    ":scrollbar-props": {
      "value": "",
      "description": "Attribute Reference [Scrollbar props](scrollbar#Scrollbar-Props)",
      "default": "undefined",
      "type": "object",
      "description_zh": "属性参考 [Scrollbar props](scrollbar#Scrollbar-Props)"
    },
    "single-column": {
      "value": "",
      "description": "Whether or not to set the dividing line of the row, when the parameter is 'true', the cell does not have a lower edge line",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否不设定行的分割线，当参数为`true`时，则单元格没有下边线"
    },
    "single-line": {
      "value": "",
      "description": "Whether or not to set the dividing line of the column, when the parameter value is 'true', the cell does not have a right edge",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否不设定列的分割线，当参数值为 `true` 时，则单元格没有右边线"
    },
    "size": {
      "value": [
        "small",
        "medium",
        "large"
      ],
      "description": "The size of the table",
      "default": "medium",
      "type": "small / medium / large",
      "description_zh": "表格的尺寸"
    },
    "spin-props": {
      "value": "",
      "description": "properties of the table spin",
      "default": "undefined",
      "type": "{ strokeWidth?: number, stroke?: string }",
      "description_zh": "表格 spin 的属性"
    },
    "sticky-expanded-rows": {
      "value": "",
      "description": "Whether the expanded row does not scroll horizontally with the table",
      "default": "false",
      "type": "boolean",
      "description_zh": "展开行是否不随表格横向滚动"
    },
    "striped": {
      "value": "",
      "description": "Whether or not to use zebra stripes",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否使用斑马线条纹"
    },
    ":summary": {
      "value": "",
      "description": "For the data in the summary column of the table, see <n-a href=\"#DataTableCreateSummary-Type\">DataTableCreateSummary Type</n-a>",
      "default": "undefined",
      "type": "DataTableCreateSummary",
      "description_zh": "表格总结栏的数据，类型见 <n-a href=\"#DataTableCreateSummary-Type\">DataTableCreateSummary Type</n-a>"
    },
    "summary-placement": {
      "value": [
        "top",
        "bottom"
      ],
      "description": "The position of the summary bar",
      "default": "bottom",
      "type": "top / bottom",
      "description_zh": "总结栏的位置"
    },
    "table-layout": {
      "value": [
        "auto",
        "fixed"
      ],
      "description": "The table's 'table-layout' style property is fixed when 'ellipsis' or 'max-height' is set",
      "default": "auto",
      "type": "auto / fixed",
      "description_zh": "表格的 `table-layout` 样式属性，在设定 `ellipsis` 或 `max-height` 的情况下固定为 fixed"
    },
    "virtual-scroll": {
      "value": "",
      "description": "Whether to enable virtual scrolling to cope with large-scale data, please set 'max-height' before opening. When 'virtual-scroll' is 'true', 'rowSpan' will not take effect",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否开启虚拟滚动，应对大规模数据，开启前请设定好 `max-height`。当 `virtual-scroll` 为 `true` 时，`rowSpan` 将不生效"
    }
  },
  "methods": [
    {
      "name": "clearFilters",
      "description": "Clear all filter states",
      "params": "() => void",
      "description_zh": "清空所有的 filter 状态"
    },
    {
      "name": "clearSorter",
      "description": "Clear all sort states",
      "params": "() => void",
      "description_zh": "清空所有的 sort 状态"
    },
    {
      "name": "filters",
      "description": "Sets the current filter for the table",
      "params": "(filters: DataTableFilterState | null) => void",
      "description_zh": "设定表格当前的过滤器"
    },
    {
      "name": "page",
      "description": "Set the page manually",
      "params": "(page: number) => void",
      "description_zh": "手动设置 page"
    },
    {
      "name": "scrollTo",
      "description": "Scroll through the content",
      "params": "(options: { left?: number, top?: number, behavior?: ScrollBehavior }): void & (x: number, y: number) => void",
      "description_zh": "滚动内容"
    },
    {
      "name": "sort",
      "description": "Set the filter status of the table",
      "params": "(columnKey: string | number | null, order: ascend | descend | false) => void",
      "description_zh": "设定表格的过滤状态"
    }
  ],
  "typeDetail": {
    "DataTableSortState": [
      {
        "name": "columnKey",
        "description": "-",
        "type": "string | number"
      },
      {
        "name": "sorter",
        "description": "-",
        "type": "default | function | boolean"
      },
      {
        "name": "order",
        "description": "-",
        "type": "ascend | descend | false"
      }
    ]
  },
  "events": [
    {
      "name": "load",
      "description": "Asynchronously unfold callbacks for tree data",
      "params": "(rowData: object) => Promise<void>",
      "description_zh": "异步展开树形数据的回调"
    },
    {
      "name": "scroll",
      "description": "Callbacks for table body scrolling",
      "params": "(e: Event) => void",
      "description_zh": "表格主体滚动的回调"
    },
    {
      "name": "update:checked-row-keys",
      "description": "Checked-row-keys is a callback function that is triggered when the value changes",
      "params": "(keys: Array<string | number>, rows: object[], meta: { row: object | undefined, action: check | uncheck | checkAll | uncheckAll }) => void",
      "description_zh": "checked-row-keys 值改变时触发的回调函数"
    },
    {
      "name": "update:expanded-row-keys",
      "description": "The callback function that is triggered when the expanded-row-keys value changes",
      "params": "(keys: Array<string | number>) => void",
      "description_zh": "expanded-row-keys 值改变时触发的回调函数"
    },
    {
      "name": "update:filters",
      "description": "A callback function that is triggered when the filters data changes",
      "params": "(filters: DataTableFilterState, initiatorColumn: DataTableBaseColumn)",
      "description_zh": "filters 数据改变时触发的回调函数"
    },
    {
      "name": "update:page",
      "description": "The callback function that is triggered when the page changes",
      "params": "(page: number)",
      "description_zh": "page 改变时触发的回调函数"
    },
    {
      "name": "update:page-size",
      "description": "A callback function that is triggered when page-size changes",
      "params": "(pageSize: number) => void",
      "description_zh": "page-size 改变时触发的回调函数"
    },
    {
      "name": "update:sorter",
      "description": "If the change column is sorted by multiple columns, it returns 'DataTableSortState[] | null' otherwise returns 'DataTableSortState | null`",
      "params": "(options: DataTableSortState | DataTableSortState[] | null) => void",
      "description_zh": "如果变动列为多列排序则返回 `DataTableSortState[] | null` 否则返回 `DataTableSortState | null`"
    }
  ],
  "link": "https://www.naiveui.com/en-US/dark/components/data-table",
  "link_zh": "https://www.naiveui.com/zh-CN/dark/components/data-table"
}
