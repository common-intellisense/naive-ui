{
  "name": "NUpload",
  "props": {
    "abstract": {
      "value": "",
      "description": "Whether there is no DOM wrapper and the 'image-card' type of Upload is not supported",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否不存在 DOM 包裹，不支持 `image-card` 类型的 Upload"
    },
    "accept": {
      "value": "",
      "description": "For accepted file types, see <n-a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept\" target=\"_blank\">accept</n-a>",
      "default": "undefined",
      "type": "string",
      "description_zh": "接受的文件类型，参考 <n-a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept\" target=\"_blank\">accept</n-a>"
    },
    "action": {
      "value": "",
      "description": "The address where the request is submitted",
      "default": "undefined",
      "type": "string",
      "description_zh": "请求提交的地址"
    },
    ":create-thumbnail-url": {
      "value": "",
      "description": "Custom file thumbnails, if 'undefined' are returned, will use the default thumbnail display logic",
      "default": "undefined",
      "type": "(file: File | null, fileInfo: UploadSettledFileInfo) => (Promise<string> | string | undefined)",
      "description_zh": "自定义文件缩略图，如果返回了 `undefined`，会使用默认的缩略图展示逻辑"
    },
    ":custom-request": {
      "value": "",
      "description": "Custom upload method, see <n-a href=\"#UploadCustomRequestOptions-Type\">UploadCustomRequestOptions</n-a>",
      "default": "undefined",
      "type": "(options: UploadCustomRequestOptions) => void",
      "description_zh": "自定义上传方法，类型参考 <n-a href=\"#UploadCustomRequestOptions-Type\">UploadCustomRequestOptions</n-a>"
    },
    ":data": {
      "value": "",
      "description": "Additional data is required to submit the form",
      "default": "undefined",
      "type": "Object | ({ file: UploadFileInfo }) => Object",
      "description_zh": "提交表单需要附加的数据"
    },
    ":default-file-list": {
      "value": "",
      "description": "The default list of files in an uncontrolled state",
      "default": "[]",
      "type": "Array<UploadFileInfo>",
      "description_zh": "非受控状态下默认的文件列表"
    },
    "default-upload": {
      "value": "",
      "description": "Select whether to upload files by default",
      "default": "true",
      "type": "boolean",
      "description_zh": "选择文件时候是否默认上传"
    },
    "disabled": {
      "value": "",
      "description": "Whether to disable or not",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否禁用"
    },
    "directory": {
      "value": "",
      "description": "Whether directory upload is supported (only directories can be selected in the file selection box)",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否支持目录上传（在文件选框中只能选择目录）"
    },
    "directory-dnd": {
      "value": "",
      "description": "Whether to support directory drag and drop upload (if not set, it will follow 'directory' by default)",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否支持目录拖拽上传（如果不设定会默认跟随 `directory`）"
    },
    ":file-list-style": {
      "value": "",
      "description": "The style of the file list area",
      "default": "undefined",
      "type": "Object",
      "description_zh": "文件列表区域的样式"
    },
    ":file-list": {
      "value": "",
      "description": "A list of files, if the incoming component is in a controlled state",
      "default": "undefined",
      "type": "Array<UploadFileInfo>",
      "description_zh": "文件列表，如果传入组件会处于受控状态"
    },
    ":headers": {
      "value": "",
      "description": "HTTP requests require additional headers",
      "default": "undefined",
      "type": "Object | ({ file: UploadFileInfo }) => Object",
      "description_zh": "HTTP 请求需要附加的 Headers"
    },
    ":image-group-props": {
      "value": "",
      "description": "Preview the properties of the image component in Upload, refer to [ImageGroup Props](image#ImageGroup-Props)",
      "default": "undefined",
      "type": "ImageGroupProps",
      "description_zh": "Upload 中预览图片组件的属性，参考 [ImageGroup Props](image#ImageGroup-Props)"
    },
    ":input-props": {
      "value": "",
      "description": "file input element",
      "default": "undefined",
      "type": "Object",
      "description_zh": "file input 元素的属性"
    },
    ":is-error-state": {
      "value": "",
      "description": "Check whether the request is abnormal",
      "default": "undefined",
      "type": "(xhr: XMLHttpRequest) => boolean",
      "description_zh": "判断请求是否为异常状态"
    },
    "list-type": {
      "value": "",
      "description": "Built-in styles for file lists, 'text', 'image', and 'image-card'",
      "default": "text",
      "type": "string",
      "description_zh": "文件列表的内建样式，`text`、`image` 和 `image-card`"
    },
    ":max": {
      "value": "",
      "description": "Limit the number of files you can upload",
      "default": "undefined",
      "type": "number",
      "description_zh": "限制上传文件数量"
    },
    "method": {
      "value": "",
      "description": "HTTP request",
      "default": "POST",
      "type": "string",
      "description_zh": "HTTP 请求的方法"
    },
    "multiple": {
      "value": "",
      "description": "Whether multiple files are supported",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否支持多个文件"
    },
    "name": {
      "value": "",
      "description": "The name of the file's field in the submission form",
      "default": "file",
      "type": "string",
      "description_zh": "文件在提交表单中的字段名"
    },
    ":render-icon": {
      "value": "",
      "description": "Rendering function for file icons, which only works when 'list-type=\"image\"' and 'list-type=\"image-card\"'",
      "default": "undefined",
      "type": "(file: UploadSettledFileInfo) => VNodeChild",
      "description_zh": "文件图标的渲染函数，仅在 `list-type=\"image\"` 和 `list-type=\"image-card\"` 时生效"
    },
    "response-type": {
      "value": [
        "arraybuffer",
        "blob",
        "document",
        "json",
        "responseType"
      ],
      "description": "'n-upload' uses the responseType of 'XMLHttpRequest'",
      "default": "",
      "type": " / arraybuffer / blob / document / json / text",
      "description_zh": "`n-upload` 使用的 `XMLHttpRequest` 的 responseType"
    },
    ":should-use-thumbnail-url": {
      "value": "",
      "description": "The decision on whether to use the preview image function for the file takes effect only when 'list-type=\"image\"' or 'list-type=\"image-card\"' is used",
      "default": "只对图片类文件返回 true 的函数",
      "type": "(file: UploadSettledFileInfo) => boolean",
      "description_zh": "是否要对文件使用预览图的判定函数，只在 `list-type=\"image\"` 或 `list-type=\"image-card\"` 时生效"
    },
    "show-cancel-button": {
      "value": "",
      "description": "Whether to display the cancel button (displayed during pending, uploading, error), clicking the cancel button will trigger the 'on-remove' callback",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否显示取消按钮（在 pending、uploading、error 的时候展示），点击取消按钮会触发 `on-remove` 回调"
    },
    "show-download-button": {
      "value": "",
      "description": "Whether or not to display a download button (shown after finished)",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否显示下载按钮（在 finished 后展示）"
    },
    "show-remove-button": {
      "value": "",
      "description": "Whether to display the delete button (displayed after finished), clicking the delete button will trigger the 'on-remove' callback",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否显示删除按钮（在 finished 后时候展示），点击删除按钮会触发 `on-remove` 回调"
    },
    "show-retry-button": {
      "value": "",
      "description": "Whether or not to display a re-upload button (in case of error)",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否显示重新上传按钮（在 error 时展示）"
    },
    "show-file-list": {
      "value": "",
      "description": "Whether to display a list of files",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否显示文件列表"
    },
    "show-preview-button": {
      "value": "",
      "description": "Whether to allow the preview button to be displayed (takes effect when 'list-type' is 'image-card')",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否允许显示预览按钮（在 `list-type` 为 `image-card` 时生效）"
    },
    "show-trigger": {
      "value": "",
      "description": "Whether to display the trigger element",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否显示触发元素"
    },
    ":trigger-style": {
      "value": "",
      "description": "The style of the trigger area",
      "default": "undefined",
      "type": "Object | string",
      "description_zh": "触发器区域的样式"
    },
    "with-credentials": {
      "value": "",
      "description": "Whether or not cookies are carried",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否携带 Cookie"
    },
    "keep-file-after-finish": {
      "value": "",
      "description": "The file is retained in the callback after the file upload is completed and is not set to null",
      "default": "false",
      "type": "boolean",
      "description_zh": "文件上传结束的回调中保留 File，不被置为 null"
    }
  },
  "methods": [
    {
      "name": "clear",
      "description": "Clear the upload list",
      "params": "() => void",
      "description_zh": "清空上传列表"
    },
    {
      "name": "openOpenFileDialog",
      "description": "Opens the file selection dialog box",
      "params": "() => void",
      "description_zh": "打开文件选择对话框"
    },
    {
      "name": "submit",
      "description": "Commit all files that are currently in the pending state",
      "params": "(fileId?: string | number)",
      "description_zh": "提交当前所有处于 pending 状态的文件"
    }
  ],
  "typeDetail": {
    "UploadFileInfo": [
      {
        "name": "id",
        "description": "文件 id，需要唯一。请注意不要修改它，如果你需要保存一些对应的数据，可以建立一个 Map 对象来保存",
        "type": "string"
      },
      {
        "name": "name",
        "description": "文件名",
        "type": "string"
      },
      {
        "name": "status",
        "description": "上传的状态",
        "type": "pending | uploading | error | finished | removed"
      },
      {
        "name": "batchId?",
        "description": "上传批次的 id，在同一次上传被选择的文件会拥有一样的 batchId",
        "type": "string | null"
      },
      {
        "name": "file?",
        "description": "文件对应的浏览器 File 对象",
        "type": "File | null"
      },
      {
        "name": "fullPath?",
        "description": "上传文件的相对路径",
        "type": "string | null"
      },
      {
        "name": "percentage?",
        "description": "文件上传进度百分比，在 uploading 状态下生效",
        "type": "number | null"
      },
      {
        "name": "thumbnailUrl?",
        "description": "缩略图 URL",
        "type": "string | null"
      },
      {
        "name": "type?",
        "description": "MIME 类型",
        "type": "string | null"
      },
      {
        "name": "url?",
        "description": "文件下载 URL",
        "type": "string | null"
      }
    ],
    "UploadTrigger": [
      {
        "name": "abstract",
        "description": "是否不存在 DOM 包裹",
        "type": "boolean"
      }
    ]
  },
  "events": [
    {
      "name": "change",
      "description": "Callbacks for component state changes, any file state change for the component will trigger a callback",
      "params": "(options: { file: UploadFileInfo, fileList: Array<UploadFileInfo>, event?: Event }) => void",
      "description_zh": "组件状态变化的回调，组件的任何文件状态变化都会触发回调"
    },
    {
      "name": "error",
      "description": "Callbacks for file upload failures",
      "params": "(options: { file: UploadFileInfo, event?: ProgressEvent }) => UploadFileInfo | void",
      "description_zh": "文件上传失败的回调"
    },
    {
      "name": "finish",
      "description": "The callback at the end of the file upload can modify the incoming UploadFileInfo or return a new UploadFileInfo. Note: The file will be null in the next event loop",
      "params": "(options: { file: UploadFileInfo, event?: ProgressEvent }) => UploadFileInfo | undefined",
      "description_zh": "文件上传结束的回调，可以修改传入的 UploadFileInfo 或者返回一个新的 UploadFileInfo。注意：file 将会下一次事件循环中被置为 null"
    },
    {
      "name": "before-upload",
      "description": "When the callback before the file is uploaded, it will cancel the upload when it returns 'false', 'Promise resolve false', or 'Promise rejected'",
      "params": "(options: { file: UploadFileInfo, fileList: UploadFileInfo[] }) => (Promise<boolean | void> | boolean | void)",
      "description_zh": "文件上传之前的回调，返回 `false`、`Promise resolve false`、`Promise rejected` 时会取消本次上传"
    },
    {
      "name": "download",
      "description": "Click on the callback function of the file download button",
      "params": "(file: FileInfo) => void",
      "description_zh": "点击文件下载按钮的回调函数"
    },
    {
      "name": "preview",
      "description": "Click on the callback function of the file link or preview button",
      "params": "(file: FileInfo) => void",
      "description_zh": "点击文件链接或预览按钮的回调函数"
    },
    {
      "name": "remove",
      "description": "When the file deletion callback returns 'false', 'Promise resolve false', or 'Promise rejected', the deletion will be canceled",
      "params": "(options: { file: UploadFileInfo, fileList: Array<UploadFileInfo> }) => Promise<boolean> | boolean | any",
      "description_zh": "文件删除回调，返回 `false`、`Promise resolve false`、`Promise rejected` 时会取消本次删除"
    },
    {
      "name": "update:file-list",
      "description": "A callback function that is triggered when file-list changes",
      "params": "(fileList: UploadFileInfo[]) => void",
      "description_zh": "当 file-list 改变时触发的回调函数"
    }
  ],
  "link": "https://www.naiveui.com/en-US/dark/components/upload",
  "link_zh": "https://www.naiveui.com/zh-CN/dark/components/upload"
}
