{
  "name": "NNotificationProvider",
  "props": {
    ":container-style": {
      "value": "",
      "description": "The style of the container",
      "default": "undefined",
      "type": "string | Object",
      "description_zh": "容器的样式"
    },
    ":max": {
      "value": "",
      "description": "Limit the number of notifications that can be displayed",
      "default": "undefined",
      "type": "number",
      "description_zh": "限制通知框显示的个数"
    },
    "placement": {
      "value": [
        "top",
        "bottom",
        "top-right",
        "top-left",
        "bottom-left",
        "bottom-right"
      ],
      "description": "The location where all notification boxes are displayed",
      "default": "top-right",
      "type": "top / bottom / top-right / top-left / bottom-left / bottom-right",
      "description_zh": "所有通知框显示的位置"
    },
    "scrollable": {
      "value": "",
      "description": "Whether the notification is rollable or not, it does not take effect for 'placement' of top and bottom",
      "default": "true",
      "type": "boolean",
      "description_zh": "通知是否可滚动，对于 `placement` 为 top 和 bottom 不生效"
    },
    "to": {
      "value": "",
      "description": "The location of the Notification container node",
      "default": "body",
      "type": "string | HTMLElement",
      "description_zh": "Notification 容器节点的位置"
    }
  },
  "methods": [
    {
      "name": "create",
      "description": "Create a notification box",
      "params": "(option: NotificationOption) => NotificationReactive",
      "description_zh": "创建通知框"
    },
    {
      "name": "destroyAll",
      "description": "Destroy all pop-up notification boxes",
      "params": "() => void",
      "description_zh": "销毁所有弹出的通知框"
    },
    {
      "name": "error",
      "description": "Call the notification box of type 'error'",
      "params": "(option: NotificationOption) => NotificationReactive",
      "description_zh": "调用 `error` 类型的通知框"
    },
    {
      "name": "info",
      "description": "Call the notification box of type 'info'",
      "params": "(option: NotificationOption) => NotificationReactive",
      "description_zh": "调用 `info` 类型的通知框"
    },
    {
      "name": "success",
      "description": "Call the notification box of type 'success'",
      "params": "(option: NotificationOption) => NotificationReactive",
      "description_zh": "调用 `success` 类型的通知框"
    },
    {
      "name": "warning",
      "description": "Call the notification box of type 'warning'",
      "params": "(option: NotificationOption) => NotificationReactive",
      "description_zh": "调用 `warning` 类型的通知框"
    }
  ],
  "typeDetail": {
    "NotificationOption": [
      {
        "name": "action",
        "description": "操作区域的内容,可以是 render 函数",
        "type": "string | (() => VNodeChild)"
      },
      {
        "name": "avatar",
        "description": "头像区域的内容",
        "type": "() => VNodeChild"
      },
      {
        "name": "closable",
        "description": "是否显示 close 图标",
        "type": "boolean"
      },
      {
        "name": "content",
        "description": "通知框内容，可以是 render 函数",
        "type": "string | (() => VNodeChild)"
      },
      {
        "name": "description",
        "description": "描述的内容，可以是 render 函数",
        "type": "string | (() => VNodeChild)"
      },
      {
        "name": "duration",
        "description": "如果没有设定则不会自动关闭，单位毫秒",
        "type": "number"
      },
      {
        "name": "keepAliveOnHover",
        "description": "当鼠标移入时是否保持通知框显示",
        "type": "boolean"
      },
      {
        "name": "meta",
        "description": "meta 信息，可以是 render 函数",
        "type": "string | (() => VNodeChild)"
      },
      {
        "name": "title",
        "description": "title 信息，可以是 render 函数",
        "type": "string | (() => VNodeChild)"
      },
      {
        "name": "onAfterEnter",
        "description": "过渡动画进入执行完后执行的回调",
        "type": "Function"
      },
      {
        "name": "onAfterLeave",
        "description": "过渡动画离开执行完后执行的回调",
        "type": "Function"
      },
      {
        "name": "onClose",
        "description": "关闭通知的回调，返回 `false`、Promise resolve `false` 或者 reject 会取消这次关闭",
        "type": "() => boolean | Promise<boolean>"
      },
      {
        "name": "onLeave",
        "description": "过渡动画离开时执行的回调",
        "type": "Function"
      }
    ]
  },
  "events": [],
  "link": "https://www.naiveui.com/en-US/dark/components/notification",
  "link_zh": "https://www.naiveui.com/zh-CN/dark/components/notification"
}
