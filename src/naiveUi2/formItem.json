{
  "name": "NFormItem",
  "props": {
    "feedback": {
      "value": "",
      "description": "Feedback for the entry. If it is not set to 'undefined', the result of the rule validation will be overwritten",
      "default": "undefined",
      "type": "string",
      "description_zh": "表项的反馈信息。不设为 `undefined` 时，会覆盖规则验证的结果"
    },
    "first": {
      "value": "",
      "description": "Whether to show only the first error message",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否只展示首个出错信息"
    },
    "ignore-path-change": {
      "value": "",
      "description": "Usually a change in 'path' will cause a change in the data source, so naive-ui will clear the verification information. If you don't expect this behavior, you can make it true",
      "default": "false",
      "type": "boolean",
      "description_zh": "通常 `path` 的改变会导致数据来源的变化，所以 naive-ui 会清空验证信息。如果不期望这个行为，可以将其置为 true"
    },
    "label": {
      "value": "",
      "description": "Label information",
      "default": "undefined",
      "type": "string",
      "description_zh": "标签信息",
      "required": true
    },
    "label-align": {
      "value": [
        "left",
        "right"
      ],
      "description": "The text alignment of the label. If it is not set, use the 'label-align' of the outer form",
      "default": "undefined",
      "type": "left / right",
      "description_zh": "标签的文本对齐方式。如果没有被设定，使用外层表单的 `label-align`"
    },
    "label-placement": {
      "value": [
        "left",
        "top"
      ],
      "description": "If it is not set, use the 'label-placement' of the outer form",
      "default": "undefined",
      "type": "left / top",
      "description_zh": "如果没有被设定，使用外层表单的 `label-placement`"
    },
    "label-style": {
      "value": "",
      "description": "The style of the label",
      "default": "undefined",
      "type": "CSSProperties | string",
      "description_zh": "标签的样式"
    },
    "label-props": {
      "value": "",
      "description": "The attributes of the tag element",
      "default": "undefined",
      "type": "LabelHTMLAttributes",
      "description_zh": "标签元素的属性"
    },
    "label-width": {
      "value": "",
      "description": "If it is not set, use the 'label-width' of the outer form, auto means that the label width will be adjusted automatically",
      "default": "undefined",
      "type": "number | string | auto",
      "description_zh": "如果没有被设定，使用外层表单的 `label-width`，auto 意味着 label width 会被自动调整"
    },
    "path": {
      "value": "",
      "description": "The path to collect the values to the outer form 'model' object",
      "default": "undefined",
      "type": "string",
      "description_zh": "将值收集到外层表单 `model` 对象的路径",
      "required": true
    },
    ":rule": {
      "value": "",
      "description": "The rule that validates the entry, it will be merged with the rule obtained from the outer form via 'rule-path' to form the validation rule for the entry. It is recommended to set all the rules in the outer form",
      "default": "undefined",
      "type": "FormItemRule | Array<FormItemRule>",
      "description_zh": "验证表项的规则，它会被通过 `rule-path` 从外层表单获取的规则合并来作为表项的验证规则。推荐还是在外层表单设置所有规则"
    },
    "rule-path": {
      "value": "",
      "description": "Get the path to the rule from the 'rules' object of the outer form. If not, use the 'path' of the entry instead",
      "default": "undefined",
      "type": "string",
      "description_zh": "从外层表单的 `rules` 对象获取规则的路径。如果没有设定，使用表项的 `path` 代替"
    },
    "show-feedback": {
      "value": "",
      "description": "Whether to display verification feedback",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否展示校验反馈"
    },
    "show-label": {
      "value": "",
      "description": "Whether to display labels. If not, use the 'show-label' of the outer 'n-form'",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否展示标签。如果没有被设定，使用外层 `n-form` 的 `show-label`"
    },
    "show-require-mark": {
      "value": "",
      "description": "Whether or not to display a required asterisk. If not set, use the 'show-require-mark' of the outer 'n-form'",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否展示必填的星号。如果没有被设定，使用外层 `n-form` 的 `show-require-mark`"
    },
    "require-mark-placement": {
      "value": [
        "left",
        "right",
        "right-hanging"
      ],
      "description": "The location of the required asterisk. If it is not set, use the 'require-mark-placement' of the outer 'n-form'",
      "default": "right",
      "type": "left | right | right-hanging",
      "description_zh": "必填的星号的位置。如果没有被设定，使用外层 `n-form` 的 `require-mark-placement`"
    },
    "size": {
      "value": [
        "small",
        "medium",
        "large"
      ],
      "description": "size",
      "default": "medium",
      "type": "small | medium | large",
      "description_zh": "尺寸"
    },
    "validation-status": {
      "value": [
        "error",
        "success",
        "warning"
      ],
      "description": "The validation status of the form. If it is not set to 'undefined', the result of the rule validation will be overwritten",
      "default": "undefined",
      "type": "error | success | warning",
      "description_zh": "表单的验证状态。不设为 `undefined`时，会覆盖规则验证的结果"
    }
  },
  "methods": [
    {
      "name": "validate",
      "description": "Verify the entry, the return value type of Promise rejection is 'Array<FormValidationError>'. If 'trigger' is not set, all the rules for this entry will be used. 'shouldRuleBeApplied' can be used to further filter rules that have been filtered by 'trigger'",
      "params": "(options: { trigger?: string, callback?: (errors?: Array<FormValidationError>) => void, shouldRuleBeApplied?: FormItemRule => boolean, options?: AsyncValidatorOptions }) => Promise<void>",
      "description_zh": "验证表项，Promise rejection 的返回值类型是 `Array<FormValidationError>`。如果不设定 `trigger`，这一个表项全部的规则都会被使用。`shouldRuleBeApplied` 可以用来进一步过滤已经经过 `trigger` 筛选的规则"
    },
    {
      "name": "restoreValidation",
      "description": "Revert to an unverified state",
      "params": "() => void",
      "description_zh": "还原到未校验的状态"
    }
  ],
  "typeDetail": {
    "FormItemRule": [
      {
        "name": "asyncValidator",
        "description": "异步校验，支持定义回调函数",
        "type": "(rule: FormItemRule, value: any, callback: (error?: Error) => void) => void"
      },
      {
        "name": "message",
        "description": "校验失败时展示的信息",
        "type": "string"
      },
      {
        "name": "renderMessage",
        "description": "信息的渲染函数",
        "type": "() => VNodeChild"
      },
      {
        "name": "required",
        "description": "是否必填",
        "type": "boolean"
      },
      {
        "name": "trigger",
        "description": "触发方式",
        "type": "string | Array<string>"
      },
      {
        "name": "validator",
        "description": "校验规则",
        "type": "(rule: FormItemRule, value: any) => boolean | Error"
      }
    ]
  },
  "events": [],
  "link": "https://www.naiveui.com/en-US/dark/components/form",
  "link_zh": "https://www.naiveui.com/zh-CN/dark/components/form"
}
