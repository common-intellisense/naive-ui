{
  "name": "NTreeSelect",
  "props": {
    "allow-checking-not-loaded": {
      "value": "",
      "description": "Whether to allow cascade checks for nodes that are not yet fully loaded. If you're going to use this property, keep in mind that 'value' may be incomplete, and be careful to check the consistency between the behavior and the backend computation logic, especially if you have nodes disabled",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否允许级联勾选还没有完全加载的节点。如果你要用这个属性，请记住 `value` 可能是不完整的，并且请注意勾选行为和后端计算逻辑的一致性，尤其是有禁用节点的情况下"
    },
    "cascade": {
      "value": "",
      "description": "Whether to cascade when using checkbox for multi-selection",
      "default": "false",
      "type": "boolean",
      "description_zh": "使用 checkbox 进行多选时是否级联"
    },
    "checkable": {
      "value": "",
      "description": "Whether to use checkbox or not to make a selection",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否使用 checkbox 进行选择"
    },
    "check-strategy": {
      "value": "",
      "description": "Set the check policy to specify the check nodes to be displayed, 'all' means to show all the selected nodes; 'parent' means that only the parent node is displayed (when all child nodes under the parent node are selected); 'child' indicates that only child nodes are displayed",
      "default": "all",
      "type": "string",
      "description_zh": "设置勾选策略来指定显示的勾选节点，`all` 表示显示全部选中节点；`parent` 表示只显示父节点（当父节点下所有子节点都选中时）；`child` 表示只显示子节点"
    },
    "children-field": {
      "value": "",
      "description": "Override the children field name in 'TreeSelectOption'",
      "default": "children",
      "type": "string",
      "description_zh": "替代 `TreeSelectOption` 中的 children 字段名"
    },
    "clearable": {
      "value": "",
      "description": "Whether it can be purged",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否可清除"
    },
    "clear-filter-after-select": {
      "value": "",
      "description": "Whether to keep the current search term after selecting an option with filterable and multi-select",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否在可过滤和多选的情况下选中一个选项后保留当前的搜索关键词"
    },
    "consistent-menu-width": {
      "value": "",
      "description": "Whether the menu width is consistent with the input box, opening will disable virtual scrolling",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否使菜单宽度和输入框一致，打开会禁用虚拟滚动"
    },
    "default-value": {
      "value": "",
      "description": "The key is selected by default",
      "default": "null",
      "type": "string | number | Array<string | number> | null",
      "description_zh": "默认选中的 key"
    },
    "default-expand-all": {
      "value": "",
      "description": "Expand all by default",
      "default": "false",
      "type": "boolean",
      "description_zh": "默认展开全部"
    },
    ":default-expanded-keys": {
      "value": "",
      "description": "The key of the default expansion node",
      "default": "[]",
      "type": "Array<string | number>",
      "description_zh": "默认展开节点的 key"
    },
    "disabled": {
      "value": "",
      "description": "Whether to disable or not",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否禁用"
    },
    ":expanded-keys": {
      "value": "",
      "description": "Expand the key of the node",
      "default": "undefined",
      "type": "Array<string | number>",
      "description_zh": "展开节点的 key"
    },
    "indeterminate-keys": {
      "value": "",
      "description": "Partially select the key of the option",
      "default": "undefined",
      "type": "string | number",
      "description_zh": "部分选中选项的 key"
    },
    "filterable": {
      "value": "",
      "description": "Whether it is filterable",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否可过滤"
    },
    ":filter": {
      "value": "",
      "description": "Filter function",
      "default": "-",
      "type": "(pattern: string, option: TreeSelectOption) => boolean",
      "description_zh": "过滤器函数"
    },
    "key-field": {
      "value": "",
      "description": "Override the key field name in 'TreeSelectOption'",
      "default": "key",
      "type": "string",
      "description_zh": "替代 `TreeSelectOption` 中的 key 字段名"
    },
    "label-field": {
      "value": "",
      "description": "Override the label field name in 'TreeSelectOption'",
      "default": "label",
      "type": "string",
      "description_zh": "替代 `TreeSelectOption` 中的 label 字段名"
    },
    "disabled-field": {
      "value": "",
      "description": "Override the disabled field name in 'TreeSelectOption'",
      "default": "disabled",
      "type": "string",
      "description_zh": "替代 `TreeSelectOption` 中的 disabled 字段名"
    },
    "loading": {
      "value": "",
      "description": "Whether it is loading",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否加载中"
    },
    ":max-tag-count": {
      "value": "",
      "description": "The maximum number of options that are displayed directly when multi-select is set to responsive will guarantee a maximum of one line",
      "default": "undefined",
      "type": "number | responsive",
      "description_zh": "多选时最多直接显示多少选项，设为 responsive 会保证最多一行"
    },
    ":menu-props": {
      "value": "",
      "description": "DOM properties of the menu",
      "default": "undefined",
      "type": "HTMLAttributes",
      "description_zh": "菜单的 DOM 属性"
    },
    "multiple": {
      "value": "",
      "description": "Whether multiple selections are supported",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否支持多选"
    },
    ":node-props": {
      "value": "",
      "description": "The HTML attribute of the node",
      "default": "undefined",
      "type": "(info: { option: TreeSelectOption }) => HTMLAttributes",
      "description_zh": "节点的 HTML 属性"
    },
    ":options": {
      "value": "",
      "description": "Options",
      "default": "[]",
      "type": "TreeSelectOption[]",
      "description_zh": "选项",
      "required": true
    },
    "placeholder": {
      "value": "",
      "description": "Placeholder information",
      "default": "",
      "type": "string",
      "description_zh": "占位信息"
    },
    "placement": {
      "value": [
        "top-start",
        "top",
        "top-end",
        "right-start",
        "right",
        "right-end",
        "bottom-start",
        "bottom",
        "bottom-end",
        "left-start",
        "left",
        "left-end"
      ],
      "description": "The pop-up location of the selector.",
      "default": "bottom-start",
      "type": "top-start | top | top-end | right-start | right | right-end | bottom-start | bottom | bottom-end | left-start | left | left-end",
      "description_zh": "选择器的弹出位置."
    },
    ":render-label": {
      "value": "",
      "description": "A rendering function for the contents of the node",
      "default": "undefined",
      "type": "(info: { option: TreeSelectOption, checked: boolean, selected: boolean }) => VNodeChild",
      "description_zh": "节点内容的渲染函数"
    },
    ":render-prefix": {
      "value": "",
      "description": "Rendering function for node prefixes",
      "default": "undefined",
      "type": "(info: { option: TreeSelectOption, checked: boolean, selected: boolean }) => VNodeChild",
      "description_zh": "节点前缀的渲染函数"
    },
    ":render-suffix": {
      "value": "",
      "description": "Rendering function for node suffixes",
      "default": "undefined",
      "type": "(info: { option: TreeSelectOption, checked: boolean, selected: boolean }) => VNodeChild",
      "description_zh": "节点后缀的渲染函数"
    },
    ":render-switcher-icon": {
      "value": "",
      "description": "The rendering function of the node expansion switch",
      "default": "undefined",
      "type": "() => VNodeChild",
      "description_zh": "节点展开开关的渲染函数"
    },
    ":render-tag": {
      "value": "",
      "description": "Controls the rendering of labels",
      "default": "undefined",
      "type": "(props: { option: TreeSelectOption, handleClose: () => void }) => VNodeChild",
      "description_zh": "控制标签的渲染"
    },
    "separator": {
      "value": "",
      "description": "Data separators",
      "default": " / ",
      "type": "string",
      "description_zh": "数据分隔符"
    },
    "show-path": {
      "value": "",
      "description": "Whether or not to display the option path in the selector",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否在选择器中显示选项路径"
    },
    "size": {
      "value": [
        "small",
        "medium",
        "large"
      ],
      "description": "Component size",
      "default": "medium",
      "type": "small / medium / large",
      "description_zh": "组件尺寸"
    },
    "status": {
      "value": [
        "success",
        "warning",
        "error"
      ],
      "description": "Verify the status",
      "default": "undefined",
      "type": "success / warning / error",
      "description_zh": "验证状态"
    },
    "to": {
      "value": "",
      "description": "menu's container node, 'false' will stay put",
      "default": "body",
      "type": "string | HTMLElement | false",
      "description_zh": "菜单的容器节点，`false` 会待在原地"
    },
    "value": {
      "value": "",
      "description": "Selected key",
      "default": "undefined",
      "type": "string | number | Array<string | number> | null>",
      "description_zh": "选中的 key"
    },
    "virtual-scroll": {
      "value": "",
      "description": "Whether to turn on virtual scrolling",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否开启虚拟滚动"
    }
  },
  "methods": [
    {
      "name": "blur",
      "description": "Out of focus",
      "params": "() => void",
      "description_zh": "失焦"
    },
    {
      "name": "blurInput",
      "description": "The input is out of focus",
      "params": "() => void",
      "description_zh": "输入失焦"
    },
    {
      "name": "focus",
      "description": "focus",
      "params": "() => void",
      "description_zh": "聚焦"
    },
    {
      "name": "focusInput",
      "description": "Enter Focus",
      "params": "() => void",
      "description_zh": "输入聚焦"
    },
    {
      "name": "getCheckedData",
      "description": "Get the selected data",
      "params": "() => { keys: Array<string | number>, options: Array<TreeOption | null> }",
      "description_zh": "获取选中的数据"
    },
    {
      "name": "getIndeterminateData",
      "description": "Get half-selected data",
      "params": "() => { keys: Array<string | number>, options: Array<TreeOption | null> }",
      "description_zh": "获取半选的数据"
    }
  ],
  "typeDetail": {
    "TreeSelectOption": [
      {
        "name": "key",
        "description": "选项的 key，需要唯一，可使用 `key-field` 修改字段名",
        "type": "string | number"
      },
      {
        "name": "label",
        "description": "选项的显示内容，可使用 `label-field` 修改字段名",
        "type": "string"
      },
      {
        "name": "children?",
        "description": "节点的子选项",
        "type": "TreeSelectOption[]"
      },
      {
        "name": "disabled?",
        "description": "是否禁用选项",
        "type": "boolean"
      },
      {
        "name": "isLeaf?",
        "description": "节点是否是叶节点，在异步展开状态下是必须的",
        "type": "boolean"
      }
    ]
  },
  "events": [
    {
      "name": "blur",
      "description": "Blur",
      "params": "(e: FocusEvent) => void",
      "description_zh": "Blur 时的回调"
    },
    {
      "name": "focus",
      "description": "Focus",
      "params": "(e: FocusEvent) => void",
      "description_zh": "Focus 时的回调"
    },
    {
      "name": "load",
      "description": "A callback function that loads data asynchronously",
      "params": "(node: TreeSelectOption) => Promise<void>",
      "description_zh": "异步加载数据的回调函数"
    },
    {
      "name": "update:expanded-keys",
      "description": "Expand the callback for node updates",
      "params": "(value: Array<string | number>, meta: { node: TreeOption | null, action: expand | collapse | filter }) => void",
      "description_zh": "展开节点更新的回调"
    },
    {
      "name": "update:indeterminate-keys",
      "description": "A callback function when the node partial tick option changes",
      "params": "(keys: Array<string | number>) => void",
      "description_zh": "节点部分勾选项发生变化时的回调函数"
    },
    {
      "name": "update:value",
      "description": "A callback to update the value",
      "params": "(value: string | number | Array<string | number> | null, option: TreeSelectOption | null | Array<TreeSelectOption | null>, meta: { node: TreeOption | null, action: select | unselect | delete | clear }) => void",
      "description_zh": "更新值的回调"
    }
  ],
  "link": "https://www.naiveui.com/en-US/dark/components/tree-select",
  "link_zh": "https://www.naiveui.com/zh-CN/dark/components/tree-select"
}
