{
  "name": "NSelect",
  "props": {
    "consistent-menu-width": {
      "value": "",
      "description": "Whether the menu width is the same as the selection trigger, setting 'false' will disable 'virtual-scroll'",
      "default": "true",
      "type": "boolean",
      "description_zh": "菜单宽度是否和选择触发器一致，设为 `false` 会使 `virtual-scroll` 失效"
    },
    "children-field": {
      "value": "",
      "description": "The field name of the option group children",
      "default": "children",
      "type": "string",
      "description_zh": "选项组 children 的字段名"
    },
    "clearable": {
      "value": "",
      "description": "Whether it can be emptied",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否可清空"
    },
    "clear-filter-after-select": {
      "value": "",
      "description": "Whether to keep the current search term after selecting an option with filterable and multi-select",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否在可过滤和多选的情况下选中一个选项后保留当前的搜索关键词"
    },
    "default-value": {
      "value": "",
      "description": "Default value in uncontrolled mode",
      "default": "null",
      "type": "Array<string | number> | string | number | null",
      "description_zh": "非受控模式下的默认值"
    },
    "disabled": {
      "value": "",
      "description": "Whether to disable or not",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否禁用"
    },
    "fallback-option": {
      "value": "",
      "description": "If there is no option corresponding to the current value in the incoming options, this value should correspond to the option. If set to 'false', a fallback option will not be generated or displayed for values that cannot find the corresponding option, and values that are not in the options will be considered invalid and will be cleared by the component during the operation",
      "default": "value => ({ label: '' + value, value })",
      "type": "false | (value: string | number) => SelectOption",
      "description_zh": "在传入的选项中没有对应当前值的选项时，这个值应该对应的选项。如果设为 `false`，不会为找不到对应选项的值生成回退选项也不会显示它，未在选项中的值会被视为不合法，操作过程中会被组件清除掉"
    },
    "filterable": {
      "value": "",
      "description": "Whether it can be filtered",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否可以过滤"
    },
    "filter": {
      "value": "",
      "description": "Filter function",
      "default": "一个简单的字符串搜索算法",
      "type": "(pattern: string, option: object) => boolean",
      "description_zh": "过滤器函数"
    },
    "ignore-composition": {
      "value": "",
      "description": "Ignore the input method composition state, by default 'filter' will not be triggered during the input process of the input method",
      "default": "true",
      "type": "boolean",
      "description_zh": "忽略输入法 Composition 状态，默认情况下 `filter` 在输入法输入的过程中不会触发"
    },
    ":input-props": {
      "value": "",
      "description": "The properties of the input element in the trigger, which only make sense when they are filterable",
      "default": "undefined",
      "type": "HTMLInputAttributes",
      "description_zh": "触发器中 input 元素的属性，只在可过滤时有意义"
    },
    "keyboard": {
      "value": "",
      "description": "Whether keyboard operations are supported",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否支持键盘操作"
    },
    "label-field": {
      "value": "",
      "description": "The field name of the option label",
      "default": "label",
      "type": "string",
      "description_zh": "选项 label 的字段名"
    },
    "loading": {
      "value": "",
      "description": "Whether it is loaded",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否为加载状态"
    },
    ":max-tag-count": {
      "value": "",
      "description": "The maximum number of multi-select tags to display, 'responsive' will keep all tags on a single line",
      "default": "undefined",
      "type": "number | responsive",
      "description_zh": "多选标签的最大显示数量，`responsive` 会将所有标签保持在一行"
    },
    ":menu-props": {
      "value": "",
      "description": "DOM properties of the menu",
      "default": "undefined",
      "type": "HTMLAttributes",
      "description_zh": "菜单的 DOM 属性"
    },
    "multiple": {
      "value": "",
      "description": "Whether it is multiple selection",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否为多选"
    },
    ":node-props": {
      "value": "",
      "description": "option",
      "default": "undefined",
      "type": "(option: SelectOption | SelectGroupOption) => object",
      "description_zh": "选项的 DOM 属性生成函数"
    },
    ":options": {
      "value": "",
      "description": "Configure the options, see SelectOption Properties for details",
      "default": "[]",
      "type": "Array<SelectOption | SelectGroupOption>",
      "description_zh": "配置选项内容，详情见 SelectOption Properties",
      "required": true
    },
    "placeholder": {
      "value": "",
      "description": "Prompt information",
      "default": "Please Select (i18n)",
      "type": "string",
      "required": true,
      "description_zh": "提示信息"
    },
    "placement": {
      "value": [
        "top-start",
        "top",
        "top-end",
        "right-start",
        "right",
        "right-end",
        "bottom-start",
        "bottom",
        "bottom-end",
        "left-start",
        "left",
        "left-end"
      ],
      "description": "The pop-up location of the menu",
      "default": "bottom-start",
      "type": "top-start | top | top-end | right-start | right | right-end | bottom-start | bottom | bottom-end | left-start | left | left-end",
      "description_zh": "菜单的弹出位置"
    },
    "remote": {
      "value": "",
      "description": "Whether you want to get the option asynchronously. Note that if this is set, neither 'filter' nor 'tag' will work for 'options'. At this point, you are in full control of the options",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否要异步获取选项。注意如果设定了，那么 `filter` 和 `tag` 都不会对 `options` 生效。这个时候你在全权控制 options"
    },
    ":render-label": {
      "value": "",
      "description": "Option label rendering function",
      "default": "undefined",
      "type": "(option: SelectOption | SelectGroupOption, selected: boolean) => VNodeChild",
      "description_zh": "选项标签渲染函数"
    },
    ":render-option": {
      "value": "",
      "description": "option",
      "default": "undefined",
      "type": "(info: { node: VNode, option: SelectOption | SelectGroupOption, selected: boolean }) => VNodeChild",
      "description_zh": "选项的渲染函数"
    },
    ":render-tag": {
      "value": "",
      "description": "Controls the rendering of labels",
      "default": "undefined",
      "type": "(props: { option: SelectBaseOption, handleClose: () => void }) => VNodeChild",
      "description_zh": "控制标签的渲染"
    },
    "reset-menu-on-options-change": {
      "value": "",
      "description": "Whether to reset the menu state, such as scrolling, when the options change",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否在选项变化时重置菜单状态，例如滚动状态"
    },
    "show": {
      "value": "",
      "description": "Whether or not to display the menu",
      "default": "undefined",
      "type": "boolean",
      "description_zh": "是否展示菜单"
    },
    "show-arrow": {
      "value": "",
      "description": "Whether or not to display arrows",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否展示箭头"
    },
    "show-checkmark": {
      "value": "",
      "description": "In the case of multiple selections, whether to display a checkmark",
      "default": "true",
      "type": "boolean",
      "description_zh": "多选情况下是否展示对勾"
    },
    "show-on-focus": {
      "value": "",
      "description": "Whether or not to display the menu when focused",
      "default": "false",
      "type": "boolean",
      "description_zh": "聚焦时是否展示菜单"
    },
    "size": {
      "value": [
        "tiny",
        "small",
        "medium",
        "large"
      ],
      "description": "Component size",
      "default": "medium",
      "type": "tiny / small / medium / large",
      "description_zh": "组件尺寸"
    },
    "status": {
      "value": [
        "success",
        "warning",
        "error"
      ],
      "description": "Verify the status",
      "default": "undefined",
      "type": "success | warning | error",
      "description_zh": "验证状态"
    },
    "tag": {
      "value": "",
      "description": "Whether or not you can create a new option needs to be used with 'filterable'",
      "default": "false",
      "type": "boolean",
      "description_zh": "是否可以创建新的选项，需要和 `filterable` 一起使用"
    },
    "to": {
      "value": "",
      "description": "menu's container node, 'false' will stay put",
      "default": "body",
      "type": "string | HTMLElement | false",
      "description_zh": "菜单的容器节点，`false` 会待在原地"
    },
    "v-model:value": {
      "value": "",
      "description": "The value in controlled mode",
      "default": "undefined",
      "type": "Array<string | number> | string | number | null",
      "description_zh": "受控模式下的值",
      "required": true
    },
    "value-field": {
      "value": "",
      "description": "The field name of the option value",
      "default": "value",
      "type": "string",
      "description_zh": "选项 value 的字段名"
    },
    "virtual-scroll": {
      "value": "",
      "description": "Whether to enable virtual scrolling",
      "default": "true",
      "type": "boolean",
      "description_zh": "是否启用虚拟滚动"
    }
  },
  "methods": [
    {
      "name": "focus",
      "description": "focus",
      "params": "() => void",
      "description_zh": "聚焦"
    },
    {
      "name": "focusInput",
      "description": "Enter Focus",
      "params": "() => void",
      "description_zh": "输入聚焦"
    },
    {
      "name": "blur",
      "description": "Out of focus",
      "params": "() => void",
      "description_zh": "失焦"
    },
    {
      "name": "blurInput",
      "description": "The input is out of focus",
      "params": "() => void",
      "description_zh": "输入失焦"
    }
  ],
  "typeDetail": {
    "SelectOption": [
      {
        "name": "class",
        "description": "自定义一个选项的类名",
        "type": "string"
      },
      {
        "name": "disabled",
        "description": "是否禁用一个选项",
        "type": "boolean"
      },
      {
        "name": "label",
        "description": "选项的标签，注意如果你使用了渲染函数，默认的过滤器将会过滤该选项",
        "type": "string | ((option: SelectOption, selected: boolean) => VNodeChild)"
      },
      {
        "name": "render",
        "description": "渲染整个选项",
        "type": "(info: { node: VNode, option: SelectOption, selected: boolean }) => VNodeChild"
      },
      {
        "name": "style",
        "description": "自定义一个选项的样式",
        "type": "string | CSSProperties"
      },
      {
        "name": "value",
        "description": "在选项中应该是唯一的",
        "type": "string | number"
      }
    ],
    "SelectGroupOption": [
      {
        "name": "children",
        "description": "子选项组",
        "type": "Array<SelectOption>"
      },
      {
        "name": "label",
        "description": "选项组的标签",
        "type": "string | ((option: SelectGroupOption) => VNodeChild)"
      },
      {
        "name": "key",
        "description": "在选项中应该是唯一的",
        "type": "string | number"
      },
      {
        "name": "render",
        "description": "渲染整个选项",
        "type": "(info: { node: VNode, option: SelectOption, selected: boolean }) => VNodeChild"
      },
      {
        "name": "type",
        "description": "选项组的类型",
        "type": "group"
      }
    ]
  },
  "events": [
    {
      "name": "blur",
      "description": "blur",
      "params": "() => void",
      "description_zh": "blur 时执行的回调"
    },
    {
      "name": "clear",
      "description": "clear",
      "params": "() => void",
      "description_zh": "clear 时执行的回调"
    },
    {
      "name": "create",
      "description": "How to create an option when typing. Note that 'filter' will also work for this generated option. Also make sure that the 'value' of this option and the other options are not duplicated, and should be used in conjunction with the 'tag' attribute",
      "params": "(label: string) => SelectOption",
      "description_zh": "在输入内容时如何创建一个选项。注意 `filter` 对这个生成的选项同样会生效。同时确保这个选项和其他选项的 `value` 不要有重复，应该和 `tag` 属性一起被使用"
    },
    {
      "name": "focus",
      "description": "focus",
      "params": "() => void",
      "description_zh": "focus 时执行的回调"
    },
    {
      "name": "scroll",
      "description": "Callbacks executed while scrolling",
      "params": "(e: ScrollEvent) => void",
      "description_zh": "滚动时执行的回调"
    },
    {
      "name": "search",
      "description": "Callbacks that are executed while searching",
      "params": "(value: string) => void",
      "description_zh": "搜索时执行的回调"
    },
    {
      "name": "update:show",
      "description": "menu to open a callback for a state change",
      "params": "(show: boolean) => void",
      "description_zh": "菜单打开状态变化的回调"
    },
    {
      "name": "update:value",
      "description": "A callback that is executed when the value is updated",
      "params": "(value: Array | string | number | null, option: SelectBaseOption | null | SelectBaseOption[]) => void",
      "description_zh": "值更新时执行的回调"
    }
  ],
  "link": "https://www.naiveui.com/en-US/dark/components/select",
  "link_zh": "https://www.naiveui.com/zh-CN/dark/components/select"
}
